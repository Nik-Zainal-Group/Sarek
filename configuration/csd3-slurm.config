/*
 * -------------------------------------------------
 * Nextflow config file for Sarek
 * -------------------------------------------------
 * Slurm configuration for CSD3 clusters
 * -------------------------------------------------
 */

params {
  runTime       = 1000.m //"${SLURM_TIMELIMIT}m"
  singleCPUMem  = 6000.MB //"${SLURM_MEM_PER_CPU}. MB"
  project = "$SLURM_ACCOUNT"
}

executor {
  name = 'slurm'
  queueSize = 10000
}

process {
  
  queue = "$SLURM_PARTITION"
  clusterOptions = {"-A ${params.project} --qos ${SLURM_QOS}"}

  cpus = 16
  //scratch = true

  time = params.runTime //{params.runTime * task.attempt}

  //errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
  errorStrategy = 'retry'
  maxErrors = '-1'
  maxRetries = 3

  $BuildBWAindexes {
    cpus = 1
  }
  $BuildPicardIndex {
    cpus = 1
  }
  $BuildSAMToolsIndex {
    cpus = 1
  }
  $BuildVCFIndex {
    cpus = 1
  }
  $ConcatVCF {
    cpus = 1
  }
  $CreateRecalibrationTable {
    cpus = 10
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $IndelRealigner {
    cpus = 1
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $MapReads {
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $MarkDuplicates {
    cpus = 1
    memory = {2 * params.singleCPUMem * task.cpus * task.attempt}
  }
  $MergeBams {
  }
  $RealignerTargetCreator {
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RecalibrateBam {
    cpus = 1
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunAlleleCount {
    cpus = 1
    memory = {2 * params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunAscat {
    cpus = 1
    memory = {2 * params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunBamQC {
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunBcftoolsStats {
    cpus = 1
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunConvertAlleleCounts {
    cpus = 1
    memory = {2 * params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunFastQC {
    cpus = 1
    //errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunFreeBayes {
    cpus = 1
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunHaplotypecaller {
    cpus = 1
    // Increase memory quadratically
    memory = {params.singleCPUMem * task.cpus * task.attempt * task.attempt}
  }
  $RunGenotypeGVCFs {
    cpus = 1
    memory = {params.singleCPUMem * task.cpus}
  }
  $RunManta {
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunMultiQC {
    cpus = 1
    //errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunMutect1 {
    cpus = 1
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunMutect2 {
    cpus = 1
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunSamtoolsStats {
    cpus = 1
  }
  $RunSingleManta {
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunSingleStrelka {
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunSnpeff {
    cpus = 1
    //errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunStrelka {
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
  $RunVEP {
    cpus = 4
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
    memory = {params.singleCPUMem * task.cpus * task.attempt}
  }
}
